{
  "name": "writegif",
  "version": "1.1.0",
  "description": "Take an image read by http://npm.im/readimage and write into a gif.",
  "main": "writegif.js",
  "directories": {
    "example": "examples",
    "test": "test"
  },
  "scripts": {
    "test": "node test/"
  },
  "keywords": [
    "gif",
    "image",
    "write",
    "output"
  ],
  "author": {
    "name": "Bryce B. Baril"
  },
  "license": "MIT",
  "devDependencies": {
    "readimage": "^1.0.0",
    "tape": "^2.14.0"
  },
  "dependencies": {
    "gif-encoder": "^0.4.1",
    "terminus": "^1.0.10"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:revisitors/writegif.git"
  },
  "bugs": {
    "url": "https://github.com/revisitors/writegif/issues"
  },
  "homepage": "https://github.com/revisitors/writegif",
  "readme": "writegif\n=====\n\n[![NPM](https://nodei.co/npm/writegif.png)](https://nodei.co/npm/writegif/)\n\nTake an image in the format output by http://npm.im/readimage and write it to a gif.\n\n```javascript\nvar readimage = require(\"readimage\")\nvar writegif = require(\"writegif\")\nvar fs = require(\"fs\")\n\nreadimage(fs.readFileSync(\"./examples/ravenwall.png\"), function (err, image) {\n  writegif(image, function (err, buffer) {\n    fs.writeFileSync(\"./ravenwall.gif\", buffer)\n  })\n})\n\n```\n\nMore examples are in the examples/ folder!\n\nAPI\n===\n\n`require(\"writegif\")(imageBuffer, callback)`\n---\n\nWrite a buffer that represents a gif image generated from the imageBuffer.\n\n`require(\"writegif\")(imageBuffer, options, callback)`\n---\n\nThe same as above, but `options` can contain:\n\n```js\n{\n  // 1: Best colors, worst performance\n  // 200: default, worst colors, best performance\n  quality: 10\n}\n```\n\nLICENSE\n=======\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "writegif@1.1.0",
  "_from": "writegif@~1.1.0"
}
